{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = 'https://localhost:44383/api/';\n  }\n  getProductDetails() {\n    let newPath = this.apiUrl + \"Products/details\";\n    return this.httpClient.get(newPath);\n  }\n  getProductsByGender(genderId) {\n    let newPath = this.apiUrl + \"Products/getbygenderid?genderId=\" + genderId;\n    return this.httpClient.get(newPath);\n  }\n  getProductById(productId) {\n    let newPath = this.apiUrl + \"Products/getProductDetailsById?productId=\" + productId;\n    return this.httpClient.get(newPath);\n  }\n  getProductByCategoryId(productId) {\n    let newPath = this.apiUrl + \"Products/getbycategoryid?categoryId=\" + productId;\n    return this.httpClient.get(newPath);\n  }\n  getProductByBrandId(productId) {\n    let newPath = this.apiUrl + \"Products/getbybrandid?brandId=\" + productId;\n    return this.httpClient.get(newPath);\n  }\n  getProductByColorId(productId) {\n    let newPath = this.apiUrl + \"Products/getbycolorid?colorId=\" + productId;\n    return this.httpClient.get(newPath);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAD9B,WAAM,GAAG,8BAA8B;EACO;EAG7CC,iBAAiB;IAChB,IAAIC,OAAO,GAAE,IAAI,CAACC,MAAM,GAAE,kBAAkB;IAC5C,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAmCF,OAAO,CAAC;EACtE;EAEAG,mBAAmB,CAACC,QAAe;IAClC,IAAIJ,OAAO,GAAE,IAAI,CAACC,MAAM,GAAE,kCAAkC,GAACG,QAAQ;IACrE,OAAO,IAAI,CAACN,UAAU,CAACI,GAAG,CAAmCF,OAAO,CAAC;EACtE;EAEAK,cAAc,CAACC,SAAgB;IAC9B,IAAIN,OAAO,GAAC,IAAI,CAACC,MAAM,GAAC,2CAA2C,GAAEK,SAAS;IAC9E,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAmCF,OAAO,CAAC;EACvE;EAEAO,sBAAsB,CAACD,SAAgB;IACrC,IAAIN,OAAO,GAAC,IAAI,CAACC,MAAM,GAAC,sCAAsC,GAAEK,SAAS;IACzE,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAmCF,OAAO,CAAC;EACvE;EACAQ,mBAAmB,CAACF,SAAgB;IAClC,IAAIN,OAAO,GAAC,IAAI,CAACC,MAAM,GAAC,gCAAgC,GAAEK,SAAS;IACnE,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAmCF,OAAO,CAAC;EACvE;EAGAS,mBAAmB,CAACH,SAAgB;IAClC,IAAIN,OAAO,GAAC,IAAI,CAACC,MAAM,GAAC,gCAAgC,GAAEK,SAAS;IACnE,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAmCF,OAAO,CAAC;EACvE;;AAlCWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFb;AAAM","names":["ProductService","constructor","httpClient","getProductDetails","newPath","apiUrl","get","getProductsByGender","genderId","getProductById","productId","getProductByCategoryId","getProductByBrandId","getProductByColorId","factory","providedIn"],"sourceRoot":"","sources":["C:\\pasali\\pasali\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ListResponseModel } from '../models/listResponseModel';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ProductDetail } from '../models/productDetail';\nimport { ResponseModel } from '../models/responseModel';\nimport { SingleResponseModel } from '../models/singleResponseModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  apiUrl = 'https://localhost:44383/api/';\n  constructor(private httpClient: HttpClient) { }\n\n  \n   getProductDetails():Observable<ListResponseModel<ProductDetail>> {\n    let newPath =this.apiUrl +\"Products/details\"\n    return this.httpClient.get<ListResponseModel<ProductDetail>>(newPath);\n   }\n   \n   getProductsByGender(genderId:number):Observable<ListResponseModel<ProductDetail>> {\n    let newPath =this.apiUrl +\"Products/getbygenderid?genderId=\"+genderId\n    return this.httpClient.get<ListResponseModel<ProductDetail>>(newPath);\n   }\n\n   getProductById(productId:number):Observable<ListResponseModel<ProductDetail>>{\n    let newPath=this.apiUrl+\"Products/getProductDetailsById?productId=\"+ productId\n    return this.httpClient.get<ListResponseModel<ProductDetail>>(newPath)\n  }\n  \n  getProductByCategoryId(productId:number):Observable<ListResponseModel<ProductDetail>>{\n    let newPath=this.apiUrl+\"Products/getbycategoryid?categoryId=\"+ productId\n    return this.httpClient.get<ListResponseModel<ProductDetail>>(newPath)\n  }\n  getProductByBrandId(productId:number):Observable<ListResponseModel<ProductDetail>>{\n    let newPath=this.apiUrl+\"Products/getbybrandid?brandId=\"+ productId\n    return this.httpClient.get<ListResponseModel<ProductDetail>>(newPath)\n  }\n  \n\n  getProductByColorId(productId:number):Observable<ListResponseModel<ProductDetail>>{\n    let newPath=this.apiUrl+\"Products/getbycolorid?colorId=\"+ productId\n    return this.httpClient.get<ListResponseModel<ProductDetail>>(newPath)\n  }\n}\n  \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}