{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product.service\";\nimport * as i2 from \"@angular/router\";\nexport class ProductComponent {\n  constructor(productService, activatedRoute) {\n    this.productService = productService;\n    this.activatedRoute = activatedRoute;\n    this.products = [];\n    this.productDetails = [];\n    this.categories = [];\n    this.brands = [];\n    this.colors = [];\n    this.dataLoaded = false;\n    this.Path = \"https://localhost:44349\";\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      if (params[\"genderId\"]) {\n        this.getProductsByGender(params[\"genderId\"]);\n      } else if (params[\"brandId\"] || params[\"colorId\"] || params[\"categoryId\"]) {\n        this.getProductsByFilter();\n      } else {\n        this.getProducts();\n      }\n    });\n  }\n  getProducts() {\n    this.productService.getProducts().subscribe(response => {\n      this.products = response.data;\n      this.dataLoaded = true;\n    });\n  }\n  getProductsByGender(genderId) {\n    this.productService.getProductsByGender(genderId).subscribe(response => {\n      this.products = response.data;\n      this.dataLoaded = true;\n    });\n  }\n  getProductsByFilter() {\n    this.activatedRoute.params.subscribe(params => {\n      const brandId = +params['brandId'];\n      const colorId = +params['colorId'];\n      const genderId = +params['genderId'];\n      const categoryId = +params['categoryId'];\n      this.productService.getProductDetailsFilter(colorId, brandId, categoryId, genderId).subscribe(response => {\n        this.productDetails = response.data.flat();\n        this.dataLoaded = true;\n      });\n    });\n  }\n}\nProductComponent.ɵfac = function ProductComponent_Factory(t) {\n  return new (t || ProductComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductComponent,\n  selectors: [[\"app-product\"]],\n  decls: 0,\n  vars: 0,\n  template: function ProductComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAoBA,OAAM,MAAOA,gBAAgB;EAY3BC,YACUC,cAA8B,EAC9BC,cAA8B;IAD9B,mBAAc,GAAdD,cAAc;IACd,mBAAc,GAAdC,cAAc;IAbxB,aAAQ,GAAc,EAAE;IACxB,mBAAc,GAAiB,EAAE;IAEjC,eAAU,GAAY,EAAE;IACxB,WAAM,GAAS,EAAE;IACjB,WAAM,GAAS,EAAE;IAEjB,eAAU,GAAG,KAAK;IAElB,SAAI,GAAG,yBAAyB;EAK7B;EAEHC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MAC/C,IAAIA,MAAM,CAAC,UAAU,CAAC,EAAE;QACtB,IAAI,CAACE,mBAAmB,CAACF,MAAM,CAAC,UAAU,CAAC,CAAC;OAC5C,MAAM,IAAIA,MAAM,CAAC,SAAS,CAAC,IAAIA,MAAM,CAAC,SAAS,CAAC,IAAIA,MAAM,CAAC,YAAY,CAAC,EAAE;QACzE,IAAI,CAACG,mBAAmB,EAAE;OAC3B,MAAM;QACL,IAAI,CAACC,WAAW,EAAE;;IAEtB,CAAC,CAAC;EACJ;EAEAA,WAAW;IACT,IAAI,CAACP,cAAc,CAACO,WAAW,EAAE,CAACH,SAAS,CAAEI,QAAQ,IAAI;MACvD,IAAI,CAACC,QAAQ,GAAGD,QAAQ,CAACE,IAAI;MAC7B,IAAI,CAACC,UAAU,GAAG,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAN,mBAAmB,CAACO,QAAe;IACjC,IAAI,CAACZ,cAAc,CAACK,mBAAmB,CAACO,QAAQ,CAAC,CAACR,SAAS,CAAEI,QAAQ,IAAI;MACvE,IAAI,CAACC,QAAQ,GAAGD,QAAQ,CAACE,IAAI;MAC7B,IAAI,CAACC,UAAU,GAAG,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAL,mBAAmB;IACjB,IAAI,CAACL,cAAc,CAACE,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MAC9C,MAAMU,OAAO,GAAG,CAACV,MAAM,CAAC,SAAS,CAAC;MAClC,MAAMW,OAAO,GAAG,CAACX,MAAM,CAAC,SAAS,CAAC;MAClC,MAAMS,QAAQ,GAAG,CAACT,MAAM,CAAC,UAAU,CAAC;MACpC,MAAMY,UAAU,GAAG,CAACZ,MAAM,CAAC,YAAY,CAAC;MAExC,IAAI,CAACH,cAAc,CAACgB,uBAAuB,CAACF,OAAO,EAAED,OAAO,EAAEE,UAAU,EAAEH,QAAQ,CAAC,CAChFR,SAAS,CAACI,QAAQ,IAAG;QACpB,IAAI,CAACS,cAAc,GAAGT,QAAQ,CAACE,IAAI,CAACQ,IAAI,EAAE;QAC1C,IAAI,CAACP,UAAU,GAAG,IAAI;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;;AAxDWb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["ProductComponent","constructor","productService","activatedRoute","ngOnInit","params","subscribe","getProductsByGender","getProductsByFilter","getProducts","response","products","data","dataLoaded","genderId","brandId","colorId","categoryId","getProductDetailsFilter","productDetails","flat","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\pasali\\pasali\\src\\app\\components\\product\\product.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Brand } from 'src/app/models/brand';\nimport { Category } from 'src/app/models/category';\nimport { Color } from 'src/app/models/color';\nimport { Product } from 'src/app/models/product';\nimport { ProductDetail } from 'src/app/models/productDetail';\nimport { ProductImage } from 'src/app/models/productImage';\nimport { Size } from 'src/app/models/size';\nimport { BrandService } from 'src/app/services/brand.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ColorService } from 'src/app/services/color.service';\nimport { ProductImageService } from 'src/app/services/product-image.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css'],\n})\nexport class ProductComponent implements OnInit {\n  products: Product[] = [];\n  productDetails:ProductDetail[]=[];\n  productImage:ProductImage[];\n  categories:Category[]=[];\n  brands:Brand[]=[];\n  colors:Color[]=[];\n  sizes:Size[];\n  dataLoaded = false;\n  currentImage:ProductImage\n  Path = \"https://localhost:44349\"\n\n  constructor(\n    private productService: ProductService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n  \n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params) => {\n     if (params[\"genderId\"]) {\n       this.getProductsByGender(params[\"genderId\"]);\n      } else if (params[\"brandId\"] || params[\"colorId\"] || params[\"categoryId\"]) {\n        this.getProductsByFilter();\n      } else {\n        this.getProducts();\n      }\n    });\n  }\n\n  getProducts() {\n    this.productService.getProducts().subscribe((response) => {\n      this.products = response.data;\n      this.dataLoaded = true;\n    });\n  }\n\n  getProductsByGender(genderId:number) {\n    this.productService.getProductsByGender(genderId).subscribe((response) => {\n      this.products = response.data;\n      this.dataLoaded = true;\n    });\n  }\n\n  getProductsByFilter() {\n    this.activatedRoute.params.subscribe((params) => {\n      const brandId = +params['brandId'];  \n      const colorId = +params['colorId'];\n      const genderId = +params['genderId'];\n      const categoryId = +params['categoryId'];\n\n      this.productService.getProductDetailsFilter(colorId, brandId, categoryId, genderId)\n        .subscribe(response => {\n          this.productDetails = response.data.flat();\n          this.dataLoaded = true;\n        });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}