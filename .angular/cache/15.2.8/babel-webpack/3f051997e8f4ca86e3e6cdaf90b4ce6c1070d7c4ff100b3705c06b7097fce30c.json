{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = 'https://localhost:44383/api/';\n  }\n  getProductDetails() {\n    let newPath = this.apiUrl + \"Products/details\";\n    return this.httpClient.get(newPath);\n  }\n  getProductsByGender(genderId) {\n    let newPath = this.apiUrl + \"Products/getbygenderid?genderId=\" + genderId;\n    return this.httpClient.get(newPath);\n  }\n  getProductById(productId) {\n    let newPath = this.apiUrl + \"Products/getProductDetailsById?productId=\" + productId;\n    return this.httpClient.get(newPath);\n  }\n  getProductDetailsFilter(colorId, brandId, categoryId, genderId) {\n    let params = new HttpParams();\n    if (colorId) params = params.append('colorId', colorId.toString());\n    if (brandId) params = params.append('brandId', brandId.toString());\n    if (categoryId) params = params.append('categoryId', categoryId.toString());\n    if (genderId) params = params.append('genderId', genderId.toString());\n    let newPath = this.apiUrl + \"Products/getProductDetailsFilter\";\n    return this.httpClient.get(newPath, {\n      params\n    });\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAM7D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAD9B,WAAM,GAAG,8BAA8B;EACO;EAG7CC,iBAAiB;IAChB,IAAIC,OAAO,GAAE,IAAI,CAACC,MAAM,GAAE,kBAAkB;IAC5C,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAmCF,OAAO,CAAC;EACtE;EAEAG,mBAAmB,CAACC,QAAe;IAClC,IAAIJ,OAAO,GAAE,IAAI,CAACC,MAAM,GAAE,kCAAkC,GAACG,QAAQ;IACrE,OAAO,IAAI,CAACN,UAAU,CAACI,GAAG,CAA6BF,OAAO,CAAC;EAChE;EAEAK,cAAc,CAACC,SAAgB;IAC9B,IAAIN,OAAO,GAAC,IAAI,CAACC,MAAM,GAAC,2CAA2C,GAAEK,SAAS;IAC9E,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAA6BF,OAAO,CAAC;EACjE;EAEAO,uBAAuB,CACrBC,OAAgB,EAChBC,OAAgB,EAChBC,UAAmB,EACnBN,QAAiB;IAEjB,IAAIO,MAAM,GAAG,IAAIhB,UAAU,EAAE;IAC7B,IAAIa,OAAO,EAAEG,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAACK,QAAQ,EAAE,CAAC;IAClE,IAAIJ,OAAO,EAAEE,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEH,OAAO,CAACI,QAAQ,EAAE,CAAC;IAClE,IAAIH,UAAU,EAAEC,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,YAAY,EAAEF,UAAU,CAACG,QAAQ,EAAE,CAAC;IAC3E,IAAIT,QAAQ,EAAEO,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,UAAU,EAAER,QAAQ,CAACS,QAAQ,EAAE,CAAC;IAErE,IAAIb,OAAO,GAAG,IAAI,CAACC,MAAM,GAAG,kCAAkC;IAC9D,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAqCF,OAAO,EAAE;MAACW;IAAM,CAAC,CAAC;EACnF;;AAnCWf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAkB,SAAdlB,cAAc;EAAAmB,YAFb;AAAM","names":["HttpParams","ProductService","constructor","httpClient","getProductDetails","newPath","apiUrl","get","getProductsByGender","genderId","getProductById","productId","getProductDetailsFilter","colorId","brandId","categoryId","params","append","toString","factory","providedIn"],"sourceRoot":"","sources":["C:\\pasali\\pasali\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from '../models/product';\nimport { ListResponseModel } from '../models/listResponseModel';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ProductDetail } from '../models/productDetail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  apiUrl = 'https://localhost:44383/api/';\n  constructor(private httpClient: HttpClient) { }\n\n  \n   getProductDetails():Observable<ListResponseModel<ProductDetail>> {\n    let newPath =this.apiUrl +\"Products/details\"\n    return this.httpClient.get<ListResponseModel<ProductDetail>>(newPath);\n   }\n   \n   getProductsByGender(genderId:number):Observable<ListResponseModel<Product>> {\n    let newPath =this.apiUrl +\"Products/getbygenderid?genderId=\"+genderId\n    return this.httpClient.get<ListResponseModel<Product>>(newPath);\n   }\n\n   getProductById(productId:number):Observable<ListResponseModel<Product>>{\n    let newPath=this.apiUrl+\"Products/getProductDetailsById?productId=\"+ productId\n    return this.httpClient.get<ListResponseModel<Product>>(newPath)\n  }\n\n  getProductDetailsFilter(\n    colorId?: number,\n    brandId?: number,\n    categoryId?: number,\n    genderId?: number\n  ): Observable<ListResponseModel<ProductDetail[]>> {\n    let params = new HttpParams();\n    if (colorId) params = params.append('colorId', colorId.toString());\n    if (brandId) params = params.append('brandId', brandId.toString());\n    if (categoryId) params = params.append('categoryId', categoryId.toString());\n    if (genderId) params = params.append('genderId', genderId.toString());\n  \n    let newPath = this.apiUrl + \"Products/getProductDetailsFilter\";\n    return this.httpClient.get<ListResponseModel<ProductDetail[]>>(newPath, {params});\n  }\n}\n  \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}