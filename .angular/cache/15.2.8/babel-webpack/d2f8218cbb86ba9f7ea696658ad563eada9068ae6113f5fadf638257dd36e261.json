{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/color.service\";\nimport * as i2 from \"@angular/common\";\nfunction ColorComponent_div_0_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const color_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", color_r3.colorName, \" \");\n  }\n}\nfunction ColorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Colors\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ColorComponent_div_0_li_4_Template, 2, 1, \"li\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.colors);\n  }\n}\nfunction ColorComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Loading brands...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ColorComponent {\n  constructor(colorService) {\n    this.colorService = colorService;\n    this.colors = [];\n    this.dataLoaded = false;\n  }\n  ngOnInit() {\n    this.getColors();\n  }\n  getColors() {\n    this.colorService.getColors().subscribe(response => {\n      this.colors = response.data;\n      this.dataLoaded = true;\n    });\n  }\n}\nColorComponent.ɵfac = function ColorComponent_Factory(t) {\n  return new (t || ColorComponent)(i0.ɵɵdirectiveInject(i1.ColorService));\n};\nColorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ColorComponent,\n  selectors: [[\"app-color\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ColorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ColorComponent_div_0_Template, 5, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, ColorComponent_div_1_Template, 3, 0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.dataLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dataLoaded);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAGMA,0BAAiC;IAC/BA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,mDACF;;;;;IALNA,2BAAwB;IAChBA,sBAAM;IAAAA,iBAAK;IACfA,0BAAI;IACFA,mEAEK;IACPA,iBAAK;;;;IAHmBA,eAAS;IAATA,uCAAS;;;;;IAMnCA,2BAAyB;IACpBA,iCAAiB;IAAAA,iBAAI;;;ACD5B,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAHhC,WAAM,GAAY,EAAE;IACpB,eAAU,GAAC,KAAK;EAEiC;EACjDC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAACF,YAAY,CAACE,SAAS,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACnD,IAAI,CAACC,MAAM,GAAGD,QAAQ,CAACE,IAAI;MAC3B,IAAI,CAACC,UAAU,GAAC,IAAI;IACtB,CAAC,CAAC;EACJ;;AAfWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3Bf,+DAOQ;MAENA,+DAEM;;;MAXFA,qCAAgB;MASdA,eAAiB;MAAjBA,sCAAiB","names":["i0","ColorComponent","constructor","colorService","ngOnInit","getColors","subscribe","response","colors","data","dataLoaded","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\pasali\\pasali\\src\\app\\components\\color\\color.component.html","C:\\pasali\\pasali\\src\\app\\components\\color\\color.component.ts"],"sourcesContent":["<div *ngIf=\"dataLoaded\">\n    <h2>Colors</h2>\n    <ul>\n      <li *ngFor=\"let color of colors\">\n        {{ color.colorName }}\n      </li>\n    </ul>\n  </div>\n  \n  <div *ngIf=\"!dataLoaded\">\n    <p>Loading brands...</p>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Color } from 'src/app/models/color';\nimport { ColorService } from 'src/app/services/color.service';\n\n@Component({\n  selector: 'app-color',\n  templateUrl: './color.component.html',\n  styleUrls: ['./color.component.css']\n})\nexport class ColorComponent implements OnInit {\n\n  colors: Color[] = [];\n  dataLoaded=false;\n\n  constructor(private colorService: ColorService) {}\n  ngOnInit(): void {\n    this.getColors();\n  }\n\n  getColors() {\n    this.colorService.getColors().subscribe((response) => {\n      this.colors = response.data;\n      this.dataLoaded=true;\n    });\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}